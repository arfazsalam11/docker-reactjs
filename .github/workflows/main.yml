name: CI/CD Pipeline - React + Docker + SonarQube + Nexus

on:
  push:
    branches:
      - master

jobs:
  build-sonar-nexus:
    runs-on: self-hosted  # EC2 self-hosted runner
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Build React App
        run: npm run build

      - name: Run SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=my-react-app
            -Dsonar.sources=.
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Configure Docker daemon for insecure registry
        run: |
          REGISTRY=$(echo "${{ secrets.NEXUS_REGISTRY }}" | tr -d '\n' | tr -d '\r')
          echo "{\"insecure-registries\":[\"$REGISTRY\"]}" | sudo tee /etc/docker/daemon.json
          sudo systemctl daemon-reload
          sudo systemctl restart docker

      - name: Ensure Nexus is Running and Ready
        run: |
          docker start nexus || true
          echo "Waiting for Nexus to be ready..."
          for i in {1..20}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8082/v2/ || echo "000")
            if [ "$STATUS" -eq 401 ] || [ "$STATUS" -eq 200 ]; then
              echo "Nexus is ready."
              exit 0
            fi
            echo "Nexus not ready yet (HTTP $STATUS). Retrying in 5 seconds..."
            sleep 5
          done
          echo "ERROR: Nexus did not become ready in time."
          exit 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          config-inline: |
            [registry."${{ secrets.NEXUS_REGISTRY }}"]
              http = true
              insecure = true

      - name: Log in to Nexus Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.NEXUS_REGISTRY }}
          username: ${{ secrets.NEXUS_USERNAME }}
          password: ${{ secrets.NEXUS_PASSWORD }}

      - name: Build and Push Docker Image to Nexus
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.NEXUS_REGISTRY }}/react-docker-app:latest
