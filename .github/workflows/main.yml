name: CI/CD Pipeline - React + Docker + SonarQube + Nexus + Docker Hub

on:
  push:
    branches:
      - master

jobs:
  build-sonar-nexus-dockerhub:
    runs-on: self-hosted

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Build React App
        run: npm run build

      - name: Run SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=my-react-app
            -Dsonar.sources=.
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Debug Nexus Registry Value
        run: echo "Registry = ${{ secrets.NEXUS_REGISTRY }}"

      - name: Wait for Nexus to be ready
        run: |
          echo "Checking Nexus availability..."
          for i in {1..20}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://${{ secrets.NEXUS_REGISTRY }}/v2/ || echo "000")
            if [ "$STATUS" -eq 401 ] || [ "$STATUS" -eq 200 ]; then
              echo "Nexus is ready."
              exit 0
            fi
            echo "Nexus not ready (HTTP $STATUS). Retrying in 5 seconds..."
            sleep 5
          done
          echo "ERROR: Nexus not available."
          exit 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Nexus Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.NEXUS_REGISTRY }}
          username: ${{ secrets.NEXUS_USERNAME }}
          password: ${{ secrets.NEXUS_PASSWORD }}

      - name: Build and Push Docker Image to Nexus
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.NEXUS_REGISTRY }}/react-docker-app:latest

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and Push Docker Image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/react-docker-app:latest
